#!/bin/sh
#########################################
# determine where to place the log file #
#########################################

logfile="$HOME/.dkrc.log"
[ -d "$HOME/.local/share/xorg" ] && logfile="$HOME/.local/share/xorg/dkrc.log"
: >"$logfile"

#########################################
############## autostart ################
#########################################

dunst &
spice-vdagent &
nm-applet &
eval $(/usr/bin/gnome-keyring-daemon --start --components=ssh,gpg,pkcs11,secrets) &
eval "$(ssh-agent -s)" &
ssh-add &
~/.local/bin/monitors.sh &
~/.config/polybar/launch.sh &
nitrogen --restore &
picom --config ~/.config/dk/picom.conf &
~/B_A/Nextcloud-3.11.0-x86_64.AppImage &

export GNOME_KEYRING_CONTROL GNOME_KEYRING_PID GPG_AGENT_INFO SSH_AUTH_SOCK
export GTK_THEME="Adwaita:dark" nautilus
export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/keyring/ssh

########################################

# (re)load sxhkd for keybinds
if hash sxhkd >/dev/null 2>&1; then
	pkill sxhkd
	sxhkd -c "$HOME/.config/dk/sxhkdrc" &
fi

# adjust border widths based on the DPI of the monitor
px=$(xrandr | grep ' connected' | tail -n1 | grep -o '[0-9]\+x[0-9]\+' | cut -d'x' -f2)
mm=$(xrandr | grep ' connected' | tail -n1 | grep -o '[0-9]\+mm' | tail -n1 | sed 's/mm//')
dpi=$(((px / mm) * 25))

if [ $dpi -ge 140 ]; then
	border_width=6
	border_outer_width=4
elif [ $dpi -ge 120 ]; then
	border_width=4
	border_outer_width=3
else
	border_width=3
	border_outer_width=2
fi

{ # compound command to redirect all output

	# workspace settings
	# ------------------------

	# initialize 10 workspaces (1-10) (default: 1/monitor)
	dkcmd set numws=10

	# default workspace '_' values used when allocating new workspaces
	# can be applied to all existing workspaces when passed 'apply' after ws=_
	dkcmd set ws=_ apply layout=tile master=1 stack=3 gap=4 border w=12
	dkcmd set ws=1 layout=tile stack=1 msplit=0.33
	dkcmd set ws=2 layout=grid pad left=10 right=10 top=3 bottom=3 gap=10
	dkcmd set ws=5 layout=tile stack=2 msplit=0.55
	dkcmd set ws=4 layout=grid pad left=10 right=10 top=10 bottom=10 gap=5
	dkcmd set ws=10 layout=grid pad left=10 right=10 top=10 bottom=10 gap=5

	# enable static workspaces and assign them to monitors (only relevant for multiple monitors)
	# aside -
	#       many that come from other workspace models tried dk and requested this feature
	#       try embracing the default behaviour and allow access to any workspace from any monitor
	#       you might end up liking it :)

	mon1='DP-1'
	mon2='DP-2'
	dkcmd set static_ws=true \
		ws=1 mon=$mon1 \
		ws=2 mon=$mon1 \
		ws=3 mon=$mon1 \
		ws=4 mon=$mon1 \
		ws=5 mon=$mon1 \
		ws=6 mon=$mon2 \
		ws=7 mon=$mon2 \
		ws=8 mon=$mon2 \
		ws=9 mon=$mon2 \
		ws=10 mon=$mon2

	# change workspace names (default: number == name)
	# dkcmd set \
	# 	ws=1 name="www" \
	# 	ws=2 name="dev" \
	# 	ws=3 name="dir" \
	# 	ws=4 name="txt" \
	# 	ws=5 name="vid" \
	# 	ws=6 name="pad" \
	# 	ws=7 name="mus" \
	# 	ws=8 name="gfx" \
	# 	ws=9 name="dis" \
	# 	ws=10 name="obs"

	# global settings
	# ---------------------

	# focus windows when receiving activation and enable focus-follows-mouse
	dkcmd set focus_open=true focus_urgent=true focus_mouse=true

	# place clients at the tail and ignore size hints on tiled windows
	dkcmd set tile_tohead=0 tile_hints=false

	# minimum width/height for resizing, and minimum allowed on-screen when moving
	dkcmd set win_minwh=50 win_minxy=10

	# disable gaps and borders in single window layouts
	dkcmd set smart_gap=false smart_border=true

	# define mouse mod and move/resize buttons
	dkcmd set mouse mod=alt move=button1 resize=button3

	# borders
	# ---------

	# traditional
	# set border width and colour for each window state
	# dkcmd set border width=$border_width colour focus='#6699cc' unfocus='#000000' urgent='#ee5555'

	# alternative
	# enable split borders and colours, width is overall width, outer_width consumes some of width.
	# outer_width must be less than width, outer_width of 0 will be single borders
	dkcmd set border width=$border_width outer_width=$border_outer_width \
		colour \
		focus='#8A0AEF' \
		unfocus='#4dcb14' \
		urgent='#A54242' \
		outer_focus='#8A0AEF' \
		\
		outer_unfocus='#282A2E' \
		outer_urgent='#4dcb14' # outer_focus='#282A2E' \
	# outer_urgent='#282A2E'

	# window rules
	# --------------

	# rule class, instance, and title regexes (*ALWAYS* CASE INSENSITIVE)

	# open window(s) on a monitor by number or name (active workspace on monitor)
	# dkcmd rule class="^chromium$" mon="HDMI-A-0"

	# open window(s) and use a callback function (user defined in config.h)
	# we also ignore=true to stop the window from being resized on it's own from events
	# eg. mpv --x11-name=albumart /path/to/media
	# dkcmd rule class="^mpv$" instance="^albumart$" float=true ignore=true callback=albumart bw=0

	# open window(s) in a floating state
	dkcmd rule class="^pavucontrol$" float=true w=793 h=462 x=950 y=350 stick=true
	dkcmd rule class="^gnome-calculator$" float=true stick=true
	dkcmd rule class="^xterm$" float=true w=600 h=200 x=3780 y=200 stick=false

	# focus window and workspace on opening
	dkcmd rule class="^keepassxc$" ws=5 focus=true
	dkcmd rule class="^superproductivity$" ws=8 focus=false
	dkcmd rule class="^teams-for-linux$" ws=6 focus=false
	dkcmd rule class="^(crx_cifhbcnohmdccbgoicgdjpfamggdegmo)$" ws=6 focus=false

	# update or remove an existing rule with the same match patterns
	# dkcmd rule class="^firefox$" mon="HDMI-A-0"
	# dkcmd rule remove class="^firefox$"

	# apply current rule set to all existing windows (useful for WM reload/restart)
	dkcmd rule apply '*'

	# delete all rules
	# dkcmd rule remove '*'

} >>"$logfile" 2>&1 # append responses

# inform of any errors in a notification
if grep -q 'error:' "$logfile"; then
	hash notify-send && notify-send -t 0 -u critical "dkrc has errors" \
		"$(awk '/error:/ {sub(/^error: /, ""); gsub(/</, "\<"); print}' "$logfile")"
	exit 1
fi

exit 0
